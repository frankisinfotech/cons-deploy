pipeline {
    agent any
 
    
    environment {
        SERVICE_NAME = "hoptool-auth-service"
        ORGANIZATION_NAME = "hoptool"
        DOCKERHUB_USERNAME = "hoptool"
        REPOSITORY_TAG = "${DOCKERHUB_USERNAME}/${ORGANIZATION_NAME}-${SERVICE_NAME}:${BUILD_ID}"
    }
     
    stages {
                   
        stage ('Build and Push Image') {
            steps {
                 withDockerRegistry([credentialsId: 'DOCKERHUB_USERNAME', url: ""]) {
                   sh 'docker build -t ${REPOSITORY_TAG} .'
                   sh 'docker push ${REPOSITORY_TAG}'          
            }
          }
       }
        
       stage("Install kubectl"){
            steps {
                sh """
                    curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl
                    chmod +x ./kubectl
                    ./kubectl version --client
                """
            }
        }
        
        stage ('Deploy to Cluster') {
            steps {
                sshagent(['jenkins-vms']) {
                    sh "scp -o StrictHostKeyChecking=no deploy.yaml devops@161.97.146.56:/home/devops"
                    script {
                         sh '''
                         ssh devops@161.97.146.56 "sed -e 's|REPOSITORY_TAG|${REPOSITORY_TAG}|g' deploy.yaml > result.yaml && kubectl apply -f result.yaml"
                         '''
                    }
                }
            }
        }
        
        stage('Remove Unused docker image') {
          steps{
            script {
             // sh "docker rmi -f  ${IMAGE_REPO_NAME}:${IMAGE_TAG} ${REPOSITORY_URI}:$IMAGE_TAG"
              sh "docker image prune -f"
               }
           }
        }      
    }
} 
